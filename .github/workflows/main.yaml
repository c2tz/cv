name: Compile and Deploy PDF

on:
#  push:
#    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  compile:
    runs-on: ubuntu-latest
    container: texlive/texlive:latest
    outputs:
      build_time: ${{ steps.timestamp.outputs.build_time }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      
      - name: Clean old files
        run: |
          git rm --ignore-unmatch *.pdf *.md *.png
          git commit -m 'chore: remove previous files' --allow-empty
          git push
      
      - name: Compile LaTeX
        run: latexmk --lualatex main.tex

      - name: Generate timestamp
        id: timestamp
        run: |
          BUILD_TIME=$(TZ=':Europe/Paris' date +'%d-%m-%Y_%H-%M-%S')
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV
      
      - name: Rename and commit PDF
        run: |
          mv main.pdf main$BUILD_TIME.pdf
          git add main$BUILD_TIME.pdf
          git commit -m 'feat: add new PDF version'
          git push
  
  deploy:
    needs: compile
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Sync workspace
        run: git pull origin main

      - name: Setup variables
        run: |
          echo "BUILD_TIME=${{ needs.compile.outputs.build_time }}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${{ needs.compile.outputs.build_time }}" >> $GITHUB_ENV
          echo "CHANGELOG=$(TZ=':Europe/Paris' date +'%A, %d %B %Y %T %Z')" >> $GITHUB_ENV
      
      - name: Prepare assets
        run: |
          mkdir -p out
          cp main$BUILD_TIME.pdf ./out/CV_NAME.pdf
      
      - name: Configure ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript imagemagick
          sudo sed -i \
          '/pattern="PDF"/s/none/read|write/; 
          /memory value/s/256MiB/0/; 
          /map value/s/512MiB/0/; 
          /disk value/s/none/0/' \
          /etc/ImageMagick-6/policy.xml
      
      - name: Generate preview
        run: convert -verbose -density 300 -alpha off ./out/CV_NAME.pdf -resize 80% -quality 15 CV_NAME.png

      - name: Configure Git identity
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
      - name: Update repository
        run: |
          git add CV_NAME.png
          git commit -m 'feat: update preview png'
          git push
      
      - name: Create new README.md
        run: |
          echo "" >> README.md
          echo "" >> README.md
          echo "| Preview - click on it to download |" >> README.md
          echo "| ---------- |" >> README.md
          echo "| <a href="https://github.com/c2tz/cv/releases/download/${{ env.RELEASE_NAME }}/CV_NAME.pdf"><img src="https://raw.githubusercontent.com/c2tz/cv/main/CV_NAME.png" alt="CV Preview"></a> |" >> README.md
      - name: Commit README and png
        run: |
          git add CV_NAME.png
          git add README.md
          git commit -m "docs(bot): updated png and readme with new content"
          git push
      
      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.RELEASE_NAME }}
          body: |
            **CV Update**  
            Generated: ${{ env.CHANGELOG }}  
            Version: ${{ env.RELEASE_NAME }}
          files: ./out/CV_NAME.pdf

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
    - name: Squash last 4 commits
      run: |
        # Réinitialise à l'avant-dernier commit +4
        git reset --soft HEAD~4
        # Recrée un seul commit combiné
        git commit -m "chore(workflow): full update (pdf + preview + readme)" --no-verify
    - name: Force push cleaned history
      run: git push --force origin HEAD:main

    - name: Verify history
      run: git log --oneline -n 3
